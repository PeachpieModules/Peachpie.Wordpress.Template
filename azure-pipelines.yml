# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

pool:
  vmImage: 'Ubuntu 16.04'

variables:
  BuildConfiguration: 'Release'

steps:
- task: DotNetCoreCLI@2
  displayName: 'Build Wordpress Patches'
  inputs:
    command: restore
    projects: '**/Patches/**/*.csproj'
    feedsToUse: config
    nugetConfigPath: NuGet.config    # Relative to root of the repository
    #externalFeedCredentials: <Name of the NuGet service connection>
- task: DotNetCoreCLI@2
  displayName: 'Build Wordpress MustUsePlugins'
  inputs:
    command: restore
    projects: '**/MustUsePlugins/**/*.csproj'
    feedsToUse: config
    nugetConfigPath: NuGet.config    # Relative to root of the repository
    #externalFeedCredentials: <Name of the NuGet service connection>
- task: DotNetCoreCLI@2
  displayName: 'Build Wordpress Plugins'
  inputs:
    command: restore
    projects: '**/Plugins/**/*.csproj'
    feedsToUse: config
    nugetConfigPath: NuGet.config    # Relative to root of the repository
    #externalFeedCredentials: <Name of the NuGet service connection>
- task: DotNetCoreCLI@2
  displayName: 'Build Wordpress Themes'
  inputs:
    command: restore
    projects: '**/Patches/**/*.csproj'
    feedsToUse: config
    nugetConfigPath: NuGet.config    # Relative to root of the repository
    #externalFeedCredentials: <Name of the NuGet service connection>
- task: DotNetCoreCLI@2
  displayName: 'Build Server'
  inputs:
    command: restore
    projects: '**/Server/**/*.csproj'
    feedsToUse: config
    nugetConfigPath: NuGet.config    # Relative to root of the repository
    #externalFeedCredentials: <Name of the NuGet service connection>

# Publish Build Artifacts
# Publish build artifacts to Azure Artifacts/TFS or a file share
- task: DotNetCoreCLI@2
  inputs:
    command: publish
    projects: '**/Server/**/*.csproj'
    publishWebProjects: True
    arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)'
    zipAfterPublish: True